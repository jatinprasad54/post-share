{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\7.Instagram\\\\instagram-clone\\\\src\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { storage, db } from \"./Firebase\";\nimport firebase from \"firebase\";\nimport \"./ImageUpload.css\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload({\n  username\n}) {\n  _s();\n\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState(\"\");\n\n  const handleChange = e => {\n    //this select the file to be uploaded and stored in image\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  }; //this upload the image on firebase databse\n\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image); //here we get into storage and ref and then uploading the image on firebase DB\n\n    uploadTask.on(\"state_changed\", snapshot => {\n      //progress function ...\n      //belowed line is just copied\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //Error function...\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        //Getting the link of image uploaded on firebase DB\n        setUrl(url); //this gets the link of image uploaded on firebase\n        //      db.collection(\"posts\").add({                       //adding the image with caption on firebase Collections DB\n        //          timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n        //          caption: caption,\n        //          imageURL: url,\n        //          username: username,\n        //      })\n        //      setProgress(0);\n        //      setCaption(\"\");\n        //      setImage(null);\n      }); //above code gets the link of image uploaded on firebase\n    });\n    axios.post(\"/upload\", {\n      caption: caption,\n      user: username,\n      image: url,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setProgress(0);\n    setCaption(\"\");\n    setImage(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageupload\",\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"imageupload__progress\",\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a Caption...\",\n      onChange: event => setCaption(event.target.value),\n      value: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"imageUpload__button\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"mZQLpkkVVObbSnwYWR2Z1z2pGrg=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["D:/REACT/7.Instagram/instagram-clone/src/ImageUpload.js"],"names":["Button","React","useState","storage","db","firebase","axios","ImageUpload","username","caption","setCaption","image","setImage","progress","setProgress","url","setUrl","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","post","user","timestamp","firestore","FieldValue","serverTimestamp","event","value"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { storage, db } from \"./Firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./ImageUpload.css\";\r\nimport axios from \"./axios\";\r\n\r\nfunction ImageUpload({ username }) {\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    //this select the file to be uploaded and stored in image\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  //this upload the image on firebase databse\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image); //here we get into storage and ref and then uploading the image on firebase DB\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        //progress function ...\r\n        //belowed line is just copied\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        //Error function...\r\n        console.log(error);\r\n        alert(error.message);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            //Getting the link of image uploaded on firebase DB\r\n\r\n            setUrl(url);\r\n\r\n            //this gets the link of image uploaded on firebase\r\n            //      db.collection(\"posts\").add({                       //adding the image with caption on firebase Collections DB\r\n            //          timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n            //          caption: caption,\r\n            //          imageURL: url,\r\n            //          username: username,\r\n            //      })\r\n            //      setProgress(0);\r\n            //      setCaption(\"\");\r\n            //      setImage(null);\r\n          });\r\n        //above code gets the link of image uploaded on firebase\r\n      }\r\n    );\r\n    axios.post(\"/upload\", {\r\n      caption: caption,\r\n      user: username,\r\n      image: url,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setProgress(0);\r\n    setCaption(\"\");\r\n    setImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageupload\">\r\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a Caption...\"\r\n        onChange={(event) => setCaption(event.target.value)}\r\n        value={caption}\r\n      />\r\n      <div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button className=\"imageUpload__button\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}