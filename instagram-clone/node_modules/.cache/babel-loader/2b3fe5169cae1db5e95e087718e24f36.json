{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\7.Instagram\\\\instagram-clone\\\\src\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, db } from './Firebase';\nimport firebase from 'firebase';\nimport './ImageUpload.css';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload({\n  username\n}) {\n  _s();\n\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState(\"\");\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image); //this upload the image on firebase db\n\n    uploadTask.on(\"state_changed\", snapshot => {\n      //progress function ...\n      //belowed line is just copied\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //Error function...\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n        axios.post('/upload', {\n          caption: caption,\n          user: username,\n          image: url\n        }); //this gets the link of image uploaded on firebase \n\n        db.collection(\"posts\").add({\n          //adding the image on firebase DB\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageURL: url,\n          username: username\n        });\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      }); //above code gets the link of image uploaded on firebase\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageupload\",\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"imageupload__progress\",\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a Caption...\",\n      onChange: event => setCaption(event.target.value),\n      value: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"imageUpload__button\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUpload, \"W/D49CXlrR+UDGzDPPIOxSQLuVY=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["D:/REACT/7.Instagram/instagram-clone/src/ImageUpload.js"],"names":["Button","React","useState","storage","db","firebase","axios","ImageUpload","username","caption","setCaption","image","setImage","progress","setProgress","url","setUrl","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","post","user","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageURL","event","value"],"mappings":"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","sourcesContent":["import { Button } from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport {storage, db } from './Firebase';\r\nimport firebase from 'firebase';\r\nimport './ImageUpload.css';\r\nimport axios from './axios';\r\n\r\nfunction ImageUpload({username}) {\r\n    const [caption,setCaption] = useState('');\r\n    const [image,setImage] = useState(null);\r\n    const [progress,setProgress] = useState(0);\r\n    const [url,setUrl] = useState(\"\");\r\n    \r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);   //this upload the image on firebase db\r\n\r\n    uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n            //progress function ...\r\n            //belowed line is just copied\r\n            const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes)*100\r\n            );\r\n            setProgress(progress);\r\n        },\r\n        (error) => {\r\n            //Error function...\r\n            console.log(error);\r\n            alert(error.message);\r\n        },\r\n        () => {\r\n            storage\r\n             .ref(\"images\")\r\n             .child(image.name)\r\n             .getDownloadURL()\r\n             .then((url) => {\r\n\r\n                setUrl(url);\r\n\r\n                axios.post('/upload',{\r\n                  caption: caption,\r\n                  user: username,\r\n                  image: url\r\n                });\r\n                 //this gets the link of image uploaded on firebase \r\n                 db.collection(\"posts\").add({                       //adding the image on firebase DB\r\n                     timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n                     caption: caption,\r\n                     imageURL: url,\r\n                     username: username,\r\n                 })\r\n                 setProgress(0);\r\n                 setCaption(\"\");\r\n                 setImage(null);\r\n             });\r\n             //above code gets the link of image uploaded on firebase\r\n\r\n            \r\n        }\r\n    );\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n            <input type=\"text\" placeholder=\"Enter a Caption...\" onChange={event => setCaption(event.target.value)} value={caption}/>\r\n            <div>   \r\n            <input type=\"file\" onChange={handleChange}/>\r\n            <Button className=\"imageUpload__button\" onClick={handleUpload}>\r\n                Upload\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n"]},"metadata":{},"sourceType":"module"}