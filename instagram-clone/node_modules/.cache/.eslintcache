[{"D:\\REACT\\7.Instagram\\instagram-clone\\src\\index.js":"1","D:\\REACT\\7.Instagram\\instagram-clone\\src\\App.js":"2","D:\\REACT\\7.Instagram\\instagram-clone\\src\\reportWebVitals.js":"3","D:\\REACT\\7.Instagram\\instagram-clone\\src\\Post.js":"4","D:\\REACT\\7.Instagram\\instagram-clone\\src\\Firebase.js":"5","D:\\REACT\\7.Instagram\\instagram-clone\\src\\ImageUpload.js":"6","D:\\REACT\\7.Instagram\\instagram-clone\\src\\axios.js":"7"},{"size":500,"mtime":1623435780506,"results":"8","hashOfConfig":"9"},{"size":7151,"mtime":1641738535141,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2433,"mtime":1641740886735,"results":"12","hashOfConfig":"9"},{"size":580,"mtime":1623693778416,"results":"13","hashOfConfig":"9"},{"size":2980,"mtime":1625464247171,"results":"14","hashOfConfig":"9"},{"size":133,"mtime":1641738654687,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1q58pka",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\REACT\\7.Instagram\\instagram-clone\\src\\index.js",[],["33","34"],"D:\\REACT\\7.Instagram\\instagram-clone\\src\\App.js",["35"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./Post\";\nimport { auth, db } from \"./Firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Button, Input, Avatar } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\";\nimport InstagramEmbed from \"react-instagram-embed\";\nimport axios from \"./axios\";\nimport Pusher from \"pusher-js\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  // const [registerOpen, setRegisterOpen] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user is logged in...\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // dont update username\n        } else {\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        setUser(null);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  const fetchPosts = async () =>\n    await axios.get(\"/sync\").then((response) => {\n      console.log(\"Reached at fetch\");\n      console.log(response);\n      setPosts(response.data);\n    });\n\n  useEffect(() => {\n    const pusher = new Pusher(\"69305f7a54611f242df4\", {\n      cluster: \"mt1\",\n    });\n\n    const channel = pusher.subscribe(\"posts\");\n    channel.bind(\"inserted\", (data) => {\n      console.log(\"data recieved\", data);\n      fetchPosts();\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  console.log(\"posts are >>>\", posts);\n\n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpenSignIn(false);\n  };\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"form-logo\"\n              />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__login\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"\"\n              />\n            </center>\n\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signIn}>\n              Login\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt=\"\"\n        />\n        {user?.displayName ? (\n          <div className=\"app__headerRight\">\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n            <Avatar\n              className=\"app__headerAvatar\"\n              alt={user.displayName}\n              src=\"/static/images/avatar/1.jpg\"\n            />\n          </div>\n        ) : (\n          <form className=\"app__loginHome\">\n            <Button onClick={() => setOpenSignIn(true)}>Login</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </form>\n        )}\n      </div>\n\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          {posts.map((post) => (\n            <Post\n              key={post._id}\n              postId={post._id}\n              user={user}\n              username={post.user}\n              caption={post.caption}\n              imageURL={post.image}\n            />\n          ))}\n        </div>\n        <div className=\"app__postsRight\">\n          {/* <h1> Embed</h1> */}\n          <InstagramEmbed\n            url=\"https://www.instagram.com/p/CLPQDA2hECf/\"\n            clientAccessToken=\"IGQVJYYWlwWDkzVWRPZA2p5cWFUclMxaXZABTFdsNWpBT2Q0YmVPUmFONkE5b3FEdktGTnNJMUoyZADdLVGxQcjRjU05RUjdQYUtDQktJN2xLT3E2TEVtTkNGZAWRTTTJ0aGY2RlE5ckJfWFBHQjdfb1VFUwZDZD\"\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName=\"div\"\n            protocol=\"\"\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n\n      {user?.displayName ? (\n        <div className=\"app__upload\">\n          <ImageUpload username={user.displayName} />\n        </div>\n      ) : (\n        <center>\n          <h3>Sorry you need to login to upload</h3>{\" \"}\n        </center>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\REACT\\7.Instagram\\instagram-clone\\src\\reportWebVitals.js",[],"D:\\REACT\\7.Instagram\\instagram-clone\\src\\Post.js",[],"D:\\REACT\\7.Instagram\\instagram-clone\\src\\Firebase.js",[],"D:\\REACT\\7.Instagram\\instagram-clone\\src\\ImageUpload.js",["36"],"import { Button } from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport {storage, db } from './Firebase';\r\nimport firebase from 'firebase';\r\nimport './ImageUpload.css';\r\nimport axios from './axios';\r\n\r\nfunction ImageUpload({username}) {\r\n    const [caption,setCaption] = useState('');\r\n    const [image,setImage] = useState(null);\r\n    const [progress,setProgress] = useState(0);\r\n    const [url,setUrl] = useState(\"\");\r\n    \r\n    const handleChange = (e) => {       //this select the file to be uploaded and stored in image\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    }\r\n    \r\n    //this upload the image on firebase databse\r\n    const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);    //here we get into storage and ref and then uploading the image on firebase DB\r\n\r\n    uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n            //progress function ...\r\n            //belowed line is just copied\r\n            const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes)*100\r\n            );\r\n            setProgress(progress);\r\n        },\r\n        (error) => {\r\n            //Error function...\r\n            console.log(error);\r\n            alert(error.message);\r\n        },\r\n        () => {\r\n            storage\r\n             .ref(\"images\")\r\n             .child(image.name)\r\n             .getDownloadURL()\r\n             .then((url) => {      //Getting the link of image uploaded on firebase DB\r\n\r\n                setUrl(url);\r\n\r\n                axios.post('/upload',{         \r\n                  caption: caption,\r\n                  user: username,\r\n                  image: url\r\n                });\r\n                 //this gets the link of image uploaded on firebase \r\n                 db.collection(\"posts\").add({                       //adding the image with caption on firebase Collections DB\r\n                     timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n                     caption: caption,\r\n                     imageURL: url,\r\n                     username: username,\r\n                 })\r\n                 setProgress(0);\r\n                 setCaption(\"\");\r\n                 setImage(null);\r\n             });\r\n             //above code gets the link of image uploaded on firebase\r\n\r\n            \r\n        }\r\n    );\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n            <input type=\"text\" placeholder=\"Enter a Caption...\" onChange={event => setCaption(event.target.value)} value={caption}/>\r\n            <div>   \r\n            <input type=\"file\" onChange={handleChange}/>\r\n            <Button className=\"imageUpload__button\" onClick={handleUpload}>\r\n                Upload\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","D:\\REACT\\7.Instagram\\instagram-clone\\src\\axios.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":4,"column":16,"nodeType":"43","messageId":"44","endLine":4,"endColumn":18},{"ruleId":"41","severity":1,"message":"45","line":12,"column":12,"nodeType":"43","messageId":"44","endLine":12,"endColumn":15},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]